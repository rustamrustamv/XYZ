# ---------------------------------------------------------------------------
# Namespace
apiVersion: v1
kind: Namespace
metadata:
  name: monitoring
---
# ---------------------------------------------------------------------------
# Node-Exporter – one pod on every node
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: node-exporter
  namespace: monitoring
  labels:
    app: node-exporter
spec:
  selector:
    matchLabels:
      app: node-exporter
  template:
    metadata:
      labels:
        app: node-exporter
    spec:
      tolerations:
      - operator: "Exists"            # allow scheduling on control-plane
      containers:
      - name: node-exporter
        image: prom/node-exporter:v1.8.1
        args: [ "--path.rootfs=/host" ]
        resources:
          limits:   { cpu: "100m", memory: "150Mi" }
          requests: { cpu: "50m",  memory: "50Mi"  }
        volumeMounts:
        - name: host
          mountPath: /host
          readOnly: true
        ports:
        - name: metrics
          containerPort: 9100
      volumes:
      - name: host
        hostPath: { path: / }
---
# ---------------------------------------------------------------------------
# **ClusterIP** Service for Node-Exporter pods
apiVersion: v1
kind: Service
metadata:
  name: node-exporter
  namespace: monitoring
  labels: { app: node-exporter }
spec:
  selector: { app: node-exporter }
  ports:
  - name: metrics
    port: 9100
    targetPort: 9100
---
# ---------------------------------------------------------------------------
# Prometheus ConfigMap – uses k8s service-discovery
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-cfg
  namespace: monitoring
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s

    scrape_configs:
    - job_name: prometheus
      static_configs:
      - targets: ['localhost:9090']

    - job_name: node-exporter
      kubernetes_sd_configs:
      - role: pod
      relabel_configs:
      # keep only pods with label app=node-exporter
      - source_labels: [ __meta_kubernetes_pod_label_app ]
        regex: node-exporter
        action: keep
      # replace pod IP:port -> podIP:9100
      - source_labels: [ __address__ ]
        regex: (.+):\d+
        replacement: $1:9100
        target_label: __address__
---
# ---------------------------------------------------------------------------
# Prometheus – single replica, persistent storage
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: prometheus
  namespace: monitoring
spec:
  serviceName: prometheus
  replicas: 1
  selector:
    matchLabels: { app: prometheus }
  template:
    metadata:
      labels: { app: prometheus }
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:v2.52.0
        args:
        - "--config.file=/etc/prometheus/prometheus.yml"
        - "--storage.tsdb.path=/prometheus"
        ports:
        - name: web
          containerPort: 9090
        readinessProbe:
          httpGet: { path: /-/ready, port: web }
          initialDelaySeconds: 10
          periodSeconds: 5
        volumeMounts:
        - name: config
          mountPath: /etc/prometheus
        - name: data
          mountPath: /prometheus
      volumes:
      - name: config
        configMap:
          name: prometheus-cfg
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 1Gi
---
# ---------------------------------------------------------------------------
# NodePort Service for the Prometheus UI (30090)
apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: monitoring
spec:
  type: NodePort
  selector: { app: prometheus }
  ports:
  - name: http
    port: 9090
    targetPort: 9090
    nodePort: 30090